<pug ../head.pug>

# xxAI.art

网站代码部分开源，欢迎帮忙优化翻译。

## 前端代码

* [前端代码](https://github.com/xxai-art/web)
* [网站整体的语言包](https://github.com/xxai-art/web/tree/main/i18n)
* [登录模块的语言包](https://github.com/wacpkg/user/tree/main/ui.i18n)
* [网站多语言文档](https://github.com/xxai-doc)

前端的编程语言是 [@w5/coffee_plus](http://npmjs.com/@w5/coffee_plus) ，在 coffeescript 语法的基础上增加了一些特性，参见 [./coffee_plus.md](./coffee_plus.md)。

## 网站、文档国际化

基于以下 3 个项目构建

* [@w5/mdt](https://www.npmjs.com/package/@w5/mdt)

  后缀为 `.mdt`, 可以用类似 `<+ ./coffee_plus/import.js>` 的语法引用外部文件，生成后缀为 `.md` 的 markdown。

* [@w5/trmd](https://www.npmjs.com/package/@w5/trmd)

  markdown 翻译，不会翻译代码和链接，会缓存翻译过的句子，如果修改了译文但没有修改原文，再次执行不会覆盖对译文的修改。

* [@w5/i18n](https://www.npmjs.com/package/@w5/i18n)

  用于翻译 `yaml` 生成网站的语言文件。

### 文档翻译自动化说明

请参见仓库 [xxai-art/doc](https://github.com/xxai-art/doc)

克隆后，先运行 `pnpm i` 或者 `bun i` 安装包。

为了避免翻译成几百种语言的仓库过大，我把每种语言单独创建了一个代码仓库，并创立一个组织来存放这个仓库，当然你也可以放到一个仓库中。

设置环境变量 `GITHUB_ACCESS_TOKEN` 然后运行 [create.github.coffee](https://github.com/xxai-art/doc/blob/main/create.github.coffee) 会自动创建仓库。

翻译脚本参考 [run.sh](https://github.com/xxai-art/doc/blob/main/run.sh)

脚本代码解读如下：

[bunx](https://bun.sh/docs/cli/bunx) 是 npx 的替代品，更快，当然如果你没有安装 bun，用 `npx` 替代也可以。

`bunx mdt zh` 把 zh 目录下的 `.mdt` 渲染为 `.md`，参见下面 2 个链接的文件

* [coffee_plus.mdt](https://github.com/xxai-doc/zh/blob/main/coffee_plus.mdt)
* [coffee_plus.md](https://github.com/xxai-doc/zh/blob/main/coffee_plus.md)

`bunx i18n` 是翻译的核心代码。

它会解析 [i18n.yml](https://github.com/xxai-art/doc/blob/main/i18n.yml)
